@page
@model Barangay.Pages.Doctor.PrescriptionsModel
@{
    ViewData["Title"] = "Prescriptions";
    Layout = "/Pages/Shared/_DoctorLayout.cshtml";
}

<style>
    .prescription-card {
        transition: transform 0.2s, box-shadow 0.2s;
        border: none;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }

    .prescription-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    }

    .modal-header {
        background-color: #1976D2;
        color: white;
    }

    .modal-header .close {
        color: white;
    }

    .medicine-item {
        background-color: #f8f9fa;
        border-radius: 0.25rem;
        padding: 0.5rem;
        margin-bottom: 0.5rem;
    }

    .medicine-item:hover {
        background-color: #e9ecef;
    }
</style>

<!-- Header -->
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3">
    <h1 class="h2">Prescriptions</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <button type="button" class="btn btn-primary me-2" data-bs-toggle="modal" data-bs-target="#createPrescriptionModal">
            <i class="fas fa-plus me-1"></i> Create Prescription
        </button>
        <button type="button" class="btn btn-outline-secondary" onclick="location.reload()">
            <i class="fas fa-sync-alt me-1"></i> Refresh
        </button>
    </div>
</div>

<!-- Filters -->
<div class="card mb-4">
    <div class="card-body">
        <form method="get" id="filterForm" class="row g-3">
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                    <input type="text" class="form-control" id="searchQuery" name="searchQuery" 
                           value="@Model.SearchQuery" placeholder="Search prescriptions...">
                </div>
            </div>
            <div class="col-md-3">
                <select class="form-select" id="status" name="status" asp-for="@Model.SelectedStatus">
                    <option value="">All Status</option>
                    <option value="Active">Active</option>
                    <option value="Completed">Completed</option>
                    <option value="Cancelled">Cancelled</option>
                </select>
            </div>
            <div class="col-md-3">
                <button type="submit" class="btn btn-primary w-100">
                    <i class="fas fa-filter me-1"></i> Filter
                </button>
            </div>
            <div class="col-md-2">
                <a href="/Doctor/Prescriptions" class="btn btn-outline-secondary w-100">
                    <i class="fas fa-times me-1"></i> Clear
                </a>
            </div>
        </form>
    </div>
</div>

<!-- Prescriptions List -->
<div class="row">
    @if (!Model.Prescriptions.Any())
    {
        <div class="col-12 text-center py-5">
            <i class="fas fa-prescription fa-3x text-muted mb-3"></i>
            <h5 class="text-muted">No prescriptions found</h5>
            <p class="text-muted">Create a new prescription or adjust your search criteria</p>
        </div>
    }
    else
    {
        foreach (var prescription in Model.Prescriptions)
        {
            <div class="col-12 mb-3">
                <div class="card prescription-card">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-md-3">
                                <h5 class="card-title mb-1">@prescription.PatientName</h5>
                                <small class="text-muted">
                                    <i class="fas fa-calendar me-1"></i> @prescription.CreatedAt.ToString("MMM dd, yyyy")
                                </small>
                            </div>
                            <div class="col-md-3">
                                <p class="mb-1">
                                    <i class="fas fa-pills me-1"></i> @prescription.MedicineCount medicines
                                </p>
                                <small class="text-muted">
                                    <i class="fas fa-clock me-1"></i> @prescription.Duration days
                                </small>
                            </div>
                            <div class="col-md-2">
                                <span class="badge bg-@(prescription.Status == "Active" ? "success" : 
                                                     prescription.Status == "Completed" ? "secondary" : "danger")">
                                    @prescription.Status
                                </span>
                            </div>
                            <div class="col-md-4 text-end">
                                <button class="btn btn-sm btn-primary me-2" onclick="viewPrescription('@prescription.Id')">
                                    <i class="fas fa-eye me-1"></i> View
                                </button>
                                <button class="btn btn-sm btn-success me-2" onclick="printPrescription('@prescription.Id')">
                                    <i class="fas fa-print me-1"></i> Print
                                </button>
                                @if (prescription.Status == "Active")
                                {
                                    <button class="btn btn-sm btn-danger" onclick="cancelPrescription('@prescription.Id')">
                                        <i class="fas fa-times me-1"></i> Cancel
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <div class="col-12">
                <nav aria-label="Prescription navigation">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                            <a class="page-link" href="@Model.GetPageUrl(Model.CurrentPage - 1)">Previous</a>
                        </li>
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@Model.GetPageUrl(i)">@i</a>
                            </li>
                        }
                        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                            <a class="page-link" href="@Model.GetPageUrl(Model.CurrentPage + 1)">Next</a>
                        </li>
                    </ul>
                </nav>
            </div>
        }
    }
</div>

<!-- Create Prescription Modal -->
<div class="modal fade" id="createPrescriptionModal" tabindex="-1" aria-labelledby="createPrescriptionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createPrescriptionModalLabel">Create New Prescription</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="prescriptionForm">
                    <!-- Patient Selection -->
                    <div class="mb-3">
                        <label for="patientId" class="form-label">Patient</label>
                        <select class="form-select" id="patientId" name="patientId" required>
                            <option value="">Select Patient</option>
                            @foreach (var patient in Model.Patients)
                            {
                                <option value="@patient.Id">@patient.FullName</option>
                            }
                        </select>
                    </div>

                    <!-- Diagnosis -->
                    <div class="mb-3">
                        <label for="diagnosis" class="form-label">Diagnosis</label>
                        <textarea class="form-control" id="diagnosis" name="diagnosis" rows="2" required></textarea>
                    </div>

                    <!-- Medicines -->
                    <div class="mb-3">
                        <label class="form-label">Medicines</label>
                        <div id="medicineList">
                            <div class="medicine-item">
                                <div class="row g-2">
                                    <div class="col-md-4">
                                        <input type="text" class="form-control" name="medicines[0].name" placeholder="Medicine name" required>
                                    </div>
                                    <div class="col-md-2">
                                        <input type="number" class="form-control" name="medicines[0].dosage" placeholder="Dosage" required>
                                    </div>
                                    <div class="col-md-2">
                                        <select class="form-select" name="medicines[0].unit">
                                            <option value="mg">mg</option>
                                            <option value="ml">ml</option>
                                            <option value="tablet">tablet</option>
                                        </select>
                                    </div>
                                    <div class="col-md-3">
                                        <input type="text" class="form-control" name="medicines[0].frequency" placeholder="Frequency" required>
                                    </div>
                                    <div class="col-md-1">
                                        <button type="button" class="btn btn-danger btn-sm" onclick="removeMedicine(this)">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <button type="button" class="btn btn-outline-primary btn-sm mt-2" onclick="addMedicine()">
                            <i class="fas fa-plus me-1"></i> Add Medicine
                        </button>
                    </div>

                    <!-- Duration -->
                    <div class="mb-3">
                        <label for="duration" class="form-label">Duration (days)</label>
                        <input type="number" class="form-control" id="duration" name="duration" min="1" required>
                    </div>

                    <!-- Notes -->
                    <div class="mb-3">
                        <label for="notes" class="form-label">Additional Notes</label>
                        <textarea class="form-control" id="notes" name="notes" rows="2"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="savePrescription()">Create Prescription</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Medicine management
        let medicineCount = 1;

        function addMedicine() {
            const template = `
                <div class="medicine-item">
                    <div class="row g-2">
                        <div class="col-md-4">
                            <input type="text" class="form-control" name="medicines[${medicineCount}].name" placeholder="Medicine name" required>
                        </div>
                        <div class="col-md-2">
                            <input type="number" class="form-control" name="medicines[${medicineCount}].dosage" placeholder="Dosage" required>
                        </div>
                        <div class="col-md-2">
                            <select class="form-select" name="medicines[${medicineCount}].unit">
                                <option value="mg">mg</option>
                                <option value="ml">ml</option>
                                <option value="tablet">tablet</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <input type="text" class="form-control" name="medicines[${medicineCount}].frequency" placeholder="Frequency" required>
                        </div>
                        <div class="col-md-1">
                            <button type="button" class="btn btn-danger btn-sm" onclick="removeMedicine(this)">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    </div>
                </div>
            `;
            document.getElementById('medicineList').insertAdjacentHTML('beforeend', template);
            medicineCount++;
        }

        function removeMedicine(button) {
            button.closest('.medicine-item').remove();
        }

        // Form submission
        function savePrescription() {
            const form = document.getElementById('prescriptionForm');
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            const formData = new FormData(form);
            fetch('/api/prescriptions', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Error creating prescription: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error creating prescription. Please try again.');
            });
        }

        // View prescription details
        function viewPrescription(id) {
            // Implement view logic
            window.location.href = `/Doctor/Prescriptions/Details/${id}`;
        }

        // Print prescription
        function printPrescription(id) {
            window.open(`/Doctor/Prescriptions/Print/${id}`, '_blank');
        }

        // Cancel prescription
        function cancelPrescription(id) {
            if (confirm('Are you sure you want to cancel this prescription?')) {
                fetch(`/api/prescriptions/${id}/cancel`, {
                    method: 'POST'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Error cancelling prescription: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error cancelling prescription. Please try again.');
                });
            }
        }

        // Auto-submit form when select filters change
        document.getElementById('status').addEventListener('change', () => {
            document.getElementById('filterForm').submit();
        });

        // Debounce search input
        let searchTimeout;
        const searchInput = document.getElementById('searchQuery');
        searchInput.addEventListener('input', function() {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(() => {
                document.getElementById('filterForm').submit();
            }, 500);
        });
    </script>
} 