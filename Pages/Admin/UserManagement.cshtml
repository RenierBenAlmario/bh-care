@page
@model Barangay.Pages.Admin.UserManagementModel
@{
    ViewData["Title"] = "User Management";
    Layout = "_AdminLayout";
}

@using Barangay.Pages.Admin
<link rel="stylesheet" href="~/css/admin-dashboard-bhcare-new.css" />
<link rel="stylesheet" href="~/css/user-management.css" />
<link rel="stylesheet" href="~/css/custom-file-preview.css" />
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/file-preview.js" defer></script>
<script src="~/js/user-management.js" defer></script>

@Html.AntiForgeryToken()

<div class="container-fluid px-4">
    <!-- Header section with Back button -->
    <div class="d-flex justify-content-between align-items-center mt-4 mb-4">
        <h1 class="m-0">User Management</h1>
        <a href="/Admin/AdminDashboard" class="btn btn-secondary">
            <i class="fa-solid fa-arrow-left me-2"></i>Back to Dashboard
        </a>
    </div>
    
    <div class="card mb-4 dashboard-card">
        <div class="card-header navyn">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <i class="fa-solid fa-users me-1"></i>
                    User List
                </div>
                <div class="d-flex gap-2">
                    <input type="text" id="userSearchInput" class="form-control" placeholder="Search by name or email...">
                    <select class="form-select" id="statusFilter">
                        <option value="all">All Status</option>
                        <option value="pending">Pending</option>
                        <option value="verified">Verified</option>
                        <option value="rejected">Rejected</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="card-body standard-padding">
            <div class="table-responsive">
                <table class="table table-hover enhanced">
                    <thead>
                        <tr>
                            <th>User ID</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Contact</th>
                            <th>Registration Date</th>
                            <th>Status</th>
                            <th>Birth Date</th>
                            <th class="guardian-consent-column">Guardian Consent</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model.Users)
                        {
                            <tr>
                                <td>
                                    <span class="badge pill bg-secondary">
                                        @try
                                        {
                                            @(user.UserNumber > 0 ? $"BHC-{user.UserNumber:D6}" : $"BHC-{user.Id.Substring(0, 6)}")
                                        }
                                        catch
                                        {
                                            @($"BHC-{user.Id.Substring(0, 6)}")
                                        }
                                    </span>
                                </td>
                                <td>@user.FullName</td>
                                <td>@user.Email</td>
                                <td>@user.PhoneNumber</td>
                                <td>@user.CreatedAt.ToString("MMM dd, yyyy")</td>
                                <td>
                                    @{
                                        var statusLower = (user.Status ?? "Pending").ToLower();
                                        var statusClass = statusLower == "verified" ? "status-verified" : statusLower == "rejected" ? "status-warning" : "status-warning";
                                    }
                                    <span class="badge pill status-badge @statusClass">@user.Status</span>
                                </td>
                                <td>@(DateTime.TryParse(user.BirthDate, out var birthDate) ? birthDate.ToShortDateString() : "N/A")</td>
                                <td class="guardian-consent-column">
                                    @{
                                        // Use June 16, 2025 as the reference date for age calculation
                                        var referenceDate = new DateTime(2025, 6, 16);
                                        var parsedBirthDate = DateTime.TryParse(user.BirthDate, out var parsedDate) ? parsedDate : DateTime.MinValue;
                                        var isMinor = parsedBirthDate.IsMinor(referenceDate);
                                        var userAge = parsedBirthDate.CalculateAge(referenceDate);
                                    }
                                    @if (isMinor)
                                    {
                                        var guardian = Model.GuardianInformation.FirstOrDefault(g => g.UserId == user.Id);
                                        if (guardian != null)
                                        {
                                            // Display based on consent status
                                            if (guardian.ConsentStatus?.ToLower() == "approved")
                                            {
                                                <span class="badge pill status-verified guardian-badge">
                                                    <i class="fa-solid fa-circle-check me-1"></i> Approved
                                                </span>
                                                <div class="small mt-1">
                                                    <a href="/Admin/UserDetails?id=@user.Id" class="text-primary">
                                                        <i class="fa-solid fa-user-shield me-1"></i>@guardian.GuardianFirstName @guardian.GuardianLastName
                                                    </a>
                                                </div>
                                            }
                                            else if (guardian.ConsentStatus?.ToLower() == "rejected")
                                            {
                                                <span class="badge pill status-warning guardian-badge">
                                                    <i class="fa-solid fa-circle-xmark me-1"></i> Rejected
                                                </span>
                                                <div class="small mt-1">
                                                    <a href="/Admin/UserDetails?id=@user.Id" class="text-primary">
                                                        <i class="fa-solid fa-user-shield me-1"></i>@guardian.GuardianFirstName @guardian.GuardianLastName
                                                    </a>
                                                </div>
                                            }
                                            else
                                            {
                                                <span class="badge pill status-warning guardian-badge">
                                                    <i class="fa-solid fa-clock me-1"></i> Pending
                                                </span>
                                                <div class="small mt-1">
                                                    <a href="/Admin/UserDetails?id=@user.Id" class="text-primary">
                                                        <i class="fa-solid fa-user-shield me-1"></i>View Details
                                                    </a>
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger guardian-badge">
                                                <i class="fa-solid fa-triangle-exclamation me-1"></i> Missing
                                            </span>
                                            <div class="small mt-1">
                                                <a href="/Admin/UserDetails?id=@user.Id" class="text-danger">
                                                    <i class="fa-solid fa-circle-exclamation me-1"></i>Required
                                                </a>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <span class="badge pill bg-secondary guardian-badge">Not Required</span>
                                        <div class="small mt-1 text-muted">Age: @userAge</div>
                                    }
                                </td>
                                <td>
                                    <div class="action-buttons">
                                        <button type="button" class="btn action action-primary btn-sm" onclick="viewUserDetails('@user.Id')">
                                            <i class="fa-solid fa-user"></i> View Details
                                        </button>
                                        @if (user.Status.ToLower() == "pending")
                                        {
                                            <button type="button" class="btn action action-secondary btn-sm" data-id="@user.Id">
                                                <i class="fa-solid fa-check"></i> Approve
                                            </button>
                                            <button type="button" class="btn action action-secondary btn-sm" data-id="@user.Id">
                                                <i class="fa-solid fa-xmark"></i> Reject
                                            </button>
                                        }
                                        @if (!user.UserDocuments.Any())
                                        {
                                            <button type="button" class="btn action action-secondary btn-sm" onclick="showNoDocumentMessage()">
                                                <i class="fa-solid fa-file-image"></i> No ID
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Document Preview Modal -->
<div class="modal fade" id="documentPreviewModal" tabindex="-1" aria-labelledby="documentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-warning text-white">
                <h5 class="modal-title" id="documentModalLabel">Document Preview</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0">
                <div id="documentPreviewContainer" class="text-center overflow-auto p-3" style="max-height: 500px;"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <a id="downloadDocBtn" href="#" class="btn btn-warning" download>
                    <i class="fa-solid fa-download"></i> Download
                </a>
                <a id="viewDocBtn" href="#" class="btn btn-primary" target="_blank">
                    <i class="fa-solid fa-up-right-from-square"></i> Open in Browser
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Success Modal -->
<div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title" id="successModalLabel">Success</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="successMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-bs-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

<!-- Guardian Information Modal -->
<div class="modal fade" id="guardianModal" tabindex="-1" aria-labelledby="guardianModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="guardianModalLabel">
                    <i class="fa-solid fa-user-shield me-2"></i> Guardian Information
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="card h-100">
                            <div class="card-header bg-light">
                                <h6 class="mb-0">Guardian Details</h6>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Full Name:</label>
                                    <p id="guardianName" class="form-control-plaintext"></p>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Consent Status:</label>
                                    <p class="form-control-plaintext">
                                        <span id="consentStatusBadge" class="badge bg-warning">Pending</span>
                                    </p>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Proof Type:</label>
                                    <p id="proofType" class="form-control-plaintext">-</p>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Provided On:</label>
                                    <p id="consentDate" class="form-control-plaintext">-</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card h-100">
                            <div class="card-header bg-light">
                                <h6 class="mb-0">Residency Proof</h6>
                            </div>
                            <div class="card-body">
                                <div id="proofContainer" class="text-center">
                                    <div id="proofPlaceholder" class="d-flex align-items-center justify-content-center">
                                        <div class="text-center text-muted">
                                            <i class="fa-solid fa-file-image fa-3x mb-2"></i>
                                            <p>Loading proof document...</p>
                                        </div>
                                    </div>
                                    <img id="residencyProofImage" class="img-fluid d-none" alt="Residency Proof" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="d-flex justify-content-end mt-3">
                    <button type="button" id="approveConsentBtn" class="btn btn-success me-2">
                        <i class="fa-solid fa-check me-1"></i> Approve Consent
                    </button>
                    <button type="button" id="rejectConsentBtn" class="btn btn-danger me-2">
                        <i class="fa-solid fa-xmark me-1"></i> Reject Consent
                    </button>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <a id="viewProofDocumentBtn" href="#" target="_blank" class="btn btn-primary">
                    <i class="fa-solid fa-up-right-from-square me-1"></i> Open Full Document
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/user-management.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var documentModal = document.getElementById('documentPreviewModal');
            var bsDocumentModal = new bootstrap.Modal(documentModal);

            function showDocumentPreview(filePath, fileName, contentType) {
                console.log("Preview called:", filePath, fileName, contentType);
                
                var modalTitle = document.getElementById('documentModalLabel');
                var previewContainer = document.getElementById('documentPreviewContainer');
                var downloadBtn = document.getElementById('downloadDocBtn');
                var viewBtn = document.getElementById('viewDocBtn');
                
                // Set modal title
                modalTitle.textContent = fileName || 'Document Preview';
                
                // Clear previous content
                previewContainer.innerHTML = '';
                
                // Set download link
                downloadBtn.setAttribute('href', filePath);
                downloadBtn.setAttribute('download', fileName);
                
                // Set view link
                viewBtn.setAttribute('href', filePath);
                
                // Check content type and create appropriate preview
                if (contentType && contentType.startsWith('image/')) {
                    // Image preview
                    var img = document.createElement('img');
                    img.src = filePath;
                    img.classList.add('img-fluid', 'rounded', 'shadow-sm');
                    img.alt = fileName;
                    img.style.maxHeight = '450px';
                    previewContainer.appendChild(img);
                } else if (contentType && contentType.includes('pdf')) {
                    // PDF preview
                    var embed = document.createElement('embed');
                    embed.src = filePath;
                    embed.type = 'application/pdf';
                    embed.style.width = '100%';
                    embed.style.height = '450px';
                    embed.classList.add('rounded', 'shadow-sm');
                    previewContainer.appendChild(embed);
                } else {
                    // Fallback for other file types
                    var link = document.createElement('div');
                    link.classList.add('p-4', 'bg-light', 'rounded', 'shadow-sm');
                    link.innerHTML = '<div class="text-center my-4">' +
                                     '<i class="fa-solid fa-file fa-3x mb-3 text-warning"></i>' +
                                     '<p class="h5 mb-3">Preview not available for this file type</p>' +
                                     '<p>Please download or open in browser to view</p>' +
                                     '<p class="text-muted mt-3">File: ' + fileName + '</p>' +
                                     '</div>';
                    previewContainer.appendChild(link);
                }
                
                // Show the modal
                bsDocumentModal.show();
            }
            
            // Attach event listeners to all view document buttons
            document.querySelectorAll('[onclick^="showDocumentPreview"]').forEach(function(button) {
                button.addEventListener('click', function(event) {
                    var onclick = this.getAttribute('onclick');
                    // Parse parameters from onclick attribute
                    var match = onclick.match(/showDocumentPreview\('([^']+)',\s*'([^']+)',\s*'([^']+)'\)/);
                    if (match) {
                        event.preventDefault();
                        showDocumentPreview(match[1], match[2], match[3]);
                    }
                });
            });

            // Make showDocumentPreview globally available
            window.showDocumentPreview = showDocumentPreview;
            
            // Handle Guardian Information Modal
            const guardianModal = document.getElementById('guardianModal');
            if (guardianModal) {
                guardianModal.addEventListener('show.bs.modal', function (event) {
                    const button = event.relatedTarget;
                    const userId = button.getAttribute('data-userid');
                    const firstName = button.getAttribute('data-firstname');
                    const lastName = button.getAttribute('data-lastname');
                    
                    // Set guardian name in the modal
                    const guardianNameElement = document.getElementById('guardianName');
                    if (guardianNameElement) {
                        guardianNameElement.textContent = `${firstName || ''} ${lastName || ''}`.trim();
                    }
                    
                    // Set consent date - we'll use current date for demonstration
                    const consentDateElement = document.getElementById('consentDate');
                    if (consentDateElement) {
                        const today = new Date(2025, 5, 16); // June 16, 2025
                        consentDateElement.textContent = `Provided on ${today.toLocaleDateString()}`;
                    }
                    
                    // Load guardian's residency proof
                    const proofImage = document.getElementById('residencyProofImage');
                    const proofPlaceholder = document.getElementById('proofPlaceholder');
                    const viewProofBtn = document.getElementById('viewProofDocumentBtn');
                    
                    // Try to find the guardian's proof document path through AJAX
                    fetch(`/Admin/UserManagement?handler=GuardianProof&userId=${userId}`, {
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data && data.proofPath) {
                            // We have a proof document
                            proofPlaceholder.classList.add('d-none');
                            proofImage.src = data.proofPath;
                            proofImage.classList.remove('d-none');
                            viewProofBtn.href = data.proofPath;
                        } else {
                            // No proof document
                            proofPlaceholder.innerHTML = `
                                <div class="text-center text-muted">
                                    <i class="fa-solid fa-file-excel fa-3x mb-2"></i>
                                    <p>No proof document available</p>
                                </div>`;
                            proofImage.classList.add('d-none');
                            viewProofBtn.classList.add('disabled');
                        }
                    })
                    .catch(error => {
                        console.error('Error fetching guardian proof:', error);
                        proofPlaceholder.innerHTML = `
                            <div class="text-center text-danger">
                                <i class="fa-solid fa-circle-exclamation fa-3x mb-2"></i>
                                <p>Error loading proof document</p>
                            </div>`;
                        proofImage.classList.add('d-none');
                        viewProofBtn.classList.add('disabled');
                    });
                });
            }
        });

        function viewUserDetails(userId) {
            window.location.href = `/Admin/UserDetails?id=${userId}`;
        }

        function showNoDocumentMessage() {
            alert('This user has not uploaded any identity documents. Please remind them to upload their documents for verification.');
        }
    </script>
} 