@page
@model Barangay.Pages.Admin.ReportsModel
@{
    ViewData["Title"] = "Admin Reports";
    Layout = "_AdminLayout";
}

<link rel="stylesheet" href="~/css/custom-notification-enhancements.css" />
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.0/dist/chart.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>

<!-- Hidden data element to store notification data for JavaScript -->
<script id="notification-data" type="application/json">
    @Html.Raw(Json.Serialize(new
    {
        count = ViewData["NotificationCount"] ?? 0,
        notifications = ViewData["Notifications"] ?? new List<object>()
    }))
</script>

<div class="content-top">
    <div class="content-header">
        <h1 class="content-title">Reports</h1>
        <div class="breadcrumbs">
            <a href="/Admin/AdminDashboard" class="breadcrumb-item">Dashboard</a>
            <span class="breadcrumb-item active">Reports</span>
        </div>
    </div>
    <div class="content-actions">
        <button class="action-btn refresh-btn" id="refresh-data" onclick="location.reload();" data-tooltip="Refresh Reports">
            <i class="fas fa-sync-alt"></i>
        </button>
        <button class="action-btn" id="download-pdf" onclick="generateReportPDF();" data-tooltip="Download PDF Report">
            <i class="fas fa-file-pdf"></i>
        </button>
    </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success fade-in" role="alert">
        <i class="fas fa-check-circle"></i>
        <span>@TempData["SuccessMessage"]</span>
        <button type="button" class="alert-close" aria-label="Close">
            <i class="fas fa-times"></i>
        </button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger fade-in" role="alert">
        <i class="fas fa-exclamation-circle"></i>
        <span>@TempData["ErrorMessage"]</span>
        <button type="button" class="alert-close" aria-label="Close">
            <i class="fas fa-times"></i>
        </button>
    </div>
}

<!-- Current date for reference -->
<div class="current-date">
    <span>Current Date: @Model.ReportData.CurrentPhilippineTime.ToString("dddd, MMMM dd, yyyy, h:mm tt")</span>
</div>

<!-- Report Filter Controls -->
<div class="report-filter-controls mb-4">
    <div class="filter-group">
        <label for="reportType" class="filter-label">Report Type</label>
        <select id="reportType" class="filter-select">
            <option value="all">All Reports</option>
            <option value="patients">Patient Reports</option>
            <option value="consultations">Consultation Reports</option>
            <option value="health">Health Index</option>
        </select>
    </div>
    <div class="filter-group">
        <label for="timeRange" class="filter-label">Time Range</label>
        <select id="timeRange" class="filter-select">
            <option value="7days">Last 7 Days</option>
            <option value="30days" selected>Last 30 Days</option>
            <option value="90days">Last 90 Days</option>
            <option value="1year">Last Year</option>
            <option value="custom">Custom Range</option>
        </select>
    </div>
    <div class="filter-group" id="customDateRange" style="display: none;">
        <div class="date-range-picker">
            <div class="date-field">
                <label for="startDate" class="filter-label">Start Date</label>
                <input type="date" id="startDate" class="filter-input" value="@DateTime.Now.AddDays(-30).ToString("yyyy-MM-dd")">
            </div>
            <div class="date-field">
                <label for="endDate" class="filter-label">End Date</label>
        </div>
        <div class="card-footer small text-muted">
            Report generated for @System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(Model.SelectedMonth), @Model.SelectedYear
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            var sicknessData = @Html.Raw(Json.Serialize(Model.ReportData.MonthlySicknessSummary));
            
            if (sicknessData.length > 0) {
                var labels = sicknessData.map(d => d.sickness);
                var data = sicknessData.map(d => d.count);

                var ctx = document.getElementById('sicknessChart').getContext('2d');
                var sicknessChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Number of Cases',
                            data: data,
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.5)',
                                'rgba(54, 162, 235, 0.5)',
                                'rgba(255, 206, 86, 0.5)',
                                'rgba(75, 192, 192, 0.5)',
                                'rgba(153, 102, 255, 0.5)',
                                'rgba(255, 159, 64, 0.5)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)',
                                'rgba(153, 102, 255, 1)',
                                'rgba(255, 159, 64, 1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    stepSize: 1
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                display: false
                            }
                        }
                    }
                });
            }
        });
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            min: 60,
                            max: 100
                        }
                    }
                }
            });
        }

        async function generateReportPDF() {
            const { jsPDF } = window.jspdf;
            try {
                const pdf = new jsPDF('landscape');
                const container = document.getElementById('reports-container');
                
                // Add title and date
                pdf.setFontSize(18);
                pdf.text('Barangay Health Center Reports', 20, 20);
                
                pdf.setFontSize(12);
                pdf.text(`Generated on: ${new Date().toLocaleString()}`, 20, 30);
                
                // Convert charts to images
                let yOffset = 40;
                const charts = container.querySelectorAll('.chart-card');
                
                for (const chart of charts) {
                    const title = chart.querySelector('h3').textContent;
                    const canvas = chart.querySelector('canvas');
                    const footer = chart.querySelector('.chart-footer').textContent;
                    
                    // Add chart title
                    pdf.setFontSize(14);
                    pdf.text(title, 20, yOffset);
                    yOffset += 10;
                    
                    // Add chart image
                    const imgData = canvas.toDataURL('image/png');
                    pdf.addImage(imgData, 'PNG', 20, yOffset, 250, 100);
                    yOffset += 110;
                    
                    // Add chart footer
                    pdf.setFontSize(10);
                    pdf.text(footer, 20, yOffset);
                    yOffset += 20;
                    
                    // Add new page if needed
                    if (yOffset > 180 && chart !== charts[charts.length - 1]) {
                        pdf.addPage();
                        yOffset = 20;
                    }
                }
                
                // Save the PDF
                pdf.save('barangay-health-reports.pdf');
                
            } catch (error) {
                console.error('Error generating PDF:', error);
                alert('Failed to generate PDF. Please try again.');
            }
        }
    </script>
}

@section Styles {
    <style>
        .charts-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: var(--spacing-4);
            margin-top: var(--spacing-4);
        }
        
        .chart-card {
            background: var(--bg-surface);
            border-radius: var(--radius);
            box-shadow: var(--shadow-sm);
            padding: var(--spacing-4);
        }
        
        .chart-container {
            position: relative;
            height: 300px;
            margin: var(--spacing-4) 0;
        }
        
        .chart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: var(--spacing-4);
        }
        
        .chart-footer {
            display: flex;
            justify-content: space-between;
            margin-top: var(--spacing-4);
            padding-top: var(--spacing-4);
            border-top: 1px solid var(--border-light);
        }
        
        .chart-info {
            font-size: var(--text-sm);
            color: var(--text-secondary);
        }
        
        .chart-info strong {
            color: var(--text-primary);
            font-weight: 600;
        }
        
        .action-btn {
            background: none;
            border: none;
            color: var(--text-secondary);
            cursor: pointer;
            padding: var(--spacing-2);
            border-radius: var(--radius-sm);
            transition: all 0.2s ease;
            margin-left: var(--spacing-2);
        }
        
        .action-btn:hover {
            color: var(--primary);
            background: var(--primary-light);
        }
        
        .current-date {
            margin-bottom: var(--spacing-4);
            font-size: var(--text-sm);
            color: var(--text-secondary);
            text-align: right;
        }
        
        /* Dark mode functionality removed */
        
        /* Responsive adjustments */
        @@media (max-width: 768px) {
            .charts-grid {
                grid-template-columns: 1fr;
            }
            
            .chart-container {
                height: 250px;
            }
            
            .chart-footer {
                flex-direction: column;
                gap: var(--spacing-2);
            }
        }
    </style>
} 