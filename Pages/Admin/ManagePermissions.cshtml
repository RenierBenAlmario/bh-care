@page
@model Barangay.Pages.Admin.ManagePermissionsModel
@{
    ViewData["Title"] = "Manage User Permissions";
    Layout = "_AdminLayout";
}

<div class="permissions-manager">
    <div class="page-header mb-4">
        <h1 class="mb-2">
            <i class="fas fa-key text-primary me-2"></i>
            Manage User Permissions
        </h1>
        <p class="text-muted">
            Configure access permissions for staff members in the Barangay Health Care System.
        </p>
    </div>

    @if (!string.IsNullOrEmpty(Model.StatusMessage))
    {
        <div class="alert @(Model.IsError ? "alert-danger" : "alert-success") alert-dismissible fade show" role="alert">
            <i class="fas @(Model.IsError ? "fa-exclamation-circle" : "fa-check-circle") me-2"></i> @Model.StatusMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <!-- Improved Staff Selection Panel -->
        <div class="col-lg-4 mb-4">
            <div class="card shadow-sm border-0 h-100">
                <div class="card-header bg-primary text-white py-3">
                    <h5 class="mb-0 d-flex align-items-center">
                        <i class="fas fa-users me-2"></i>
                        <span>Staff Members</span>
                    </h5>
                </div>
                <div class="card-body p-0">
                    <!-- Search box for staff -->
                    <div class="p-3 border-bottom">
                        <div class="input-group">
                            <span class="input-group-text bg-light border-0"><i class="fas fa-search text-muted"></i></span>
                            <input type="text" id="staffSearch" class="form-control border-0 bg-light" 
                                   placeholder="Search staff..." aria-label="Search staff" 
                                   autocomplete="off">
                        </div>
                    </div>
                    
                    <!-- Staff list - scrollable -->
                    <div class="staff-list" style="max-height: 500px; overflow-y: auto;">
                        @foreach (var staff in Model.StaffMembers)
                        {
                            <a href="?userId=@staff.UserId" class="staff-item d-flex align-items-center p-3 border-bottom text-decoration-none @(staff.UserId == Model.SelectedUserId ? "active bg-light" : "text-dark")">
                                <div class="flex-shrink-0 me-3">
                                    <div class="avatar-circle bg-@GetRoleColor(staff.Role)">
                                        @staff.Name.Substring(0, 1).ToUpper()
                                    </div>
                                </div>
                                <div class="flex-grow-1">
                                    <h6 class="mb-1 fw-semibold">@staff.Name</h6>
                                    <div class="d-flex align-items-center small">
                                        <span class="badge bg-@GetRoleColor(staff.Role) me-2">@staff.Role</span>
                                        @if (!string.IsNullOrEmpty(staff.Position))
                                        {
                                            <span class="text-muted">@staff.Position</span>
                                        }
                                    </div>
                                </div>
                                @if (staff.UserId == Model.SelectedUserId)
                                {
                                    <i class="fas fa-check-circle text-primary ms-2"></i>
                                }
                            </a>
                        }
                    </div>
                </div>
                <div class="card-footer bg-light d-flex justify-content-end py-3">
                    <a asp-page="./AdminDashboard" class="btn btn-outline-secondary btn-sm">
                        <i class="fas fa-arrow-left me-1"></i> Back to Dashboard
                    </a>
                </div>
            </div>
        </div>

        <!-- Improved Permissions Management Panel -->
        <div class="col-lg-8">
            @if (!string.IsNullOrEmpty(Model.SelectedUserId))
            {
                <div class="card shadow-sm border-0">
                    <div class="card-header bg-primary text-white py-3 d-flex justify-content-between align-items-center">
                        <h5 class="mb-0 d-flex align-items-center">
                            <i class="fas fa-shield-alt me-2"></i>
                            <span>Permissions for @Model.SelectedUserName</span>
                        </h5>
                        
                        <!-- Quick actions dropdown -->
                        <div class="dropdown">
                            <button class="btn btn-sm btn-outline-light" type="button" id="permissionActions" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fas fa-cog"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="permissionActions">
                                <li><a class="dropdown-item" href="#" id="selectAllPermissions"><i class="fas fa-check-square me-2"></i>Select All</a></li>
                                <li><a class="dropdown-item" href="#" id="deselectAllPermissions"><i class="fas fa-square me-2"></i>Deselect All</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item" href="/Admin/GrantEssentialPermissions?userId=@Model.SelectedUserId"><i class="fas fa-shield-alt me-2"></i>Grant Essential Only</a></li>
                            </ul>
                        </div>
                    </div>
                    
                    <div class="card-body">
                        <form method="post" id="permissionsForm">
                            <input type="hidden" asp-for="SelectedUserId" />
                            
                            <div class="mb-3">
                                <p class="text-muted small">
                                    <i class="fas fa-info-circle me-1"></i>
                                    Select permissions for this user. Each permission grants access to specific system features.
                                </p>
                                
                                <!-- Collapsible permission categories -->
                                <div class="accordion permission-accordion" id="permissionAccordion">
                                    @{
                                        int categoryIndex = 0;
                                        foreach (var category in Model.PermissionsByCategory)
                                        {
                                            string headerId = $"heading{categoryIndex}";
                                            string collapseId = $"collapse{categoryIndex}";
                                            bool isFirst = categoryIndex == 0;
                                            categoryIndex++;
                                    
                                            <div class="accordion-item border mb-3 rounded">
                                                <h2 class="accordion-header" id="@headerId">
                                                    <button class="accordion-button @(isFirst ? "" : "collapsed")" type="button" 
                                                            data-bs-toggle="collapse" data-bs-target="#@collapseId" 
                                                            aria-expanded="@(isFirst ? "true" : "false")" aria-controls="@collapseId">
                                                        <i class="@GetCategoryIcon(category.Key) me-2 text-primary"></i>
                                                        <strong>@category.Key</strong>
                                                        <span class="badge bg-primary ms-2 category-count">@category.Value.Count</span>
                                                    </button>
                                                </h2>
                                                <div id="@collapseId" class="accordion-collapse collapse @(isFirst ? "show" : "")" 
                                                     aria-labelledby="@headerId" data-bs-parent="#permissionAccordion">
                                                    <div class="accordion-body">
                                                        <div class="row row-cols-1 row-cols-md-2 g-3">
                                                            @foreach (var permission in category.Value)
                                                            {
                                                                <div class="col">
                                                                    <div class="permission-check p-2 rounded">
                                                                        <div class="form-check">
                                                                            <input type="checkbox" class="form-check-input permission-checkbox" 
                                                                                   id="perm_@permission.Id" value="@permission.Id"
                                                                                   name="SelectedPermissions" 
                                                                                   @(Model.UserPermissions.Contains(permission.Id) ? "checked" : "") />
                                                                            <label class="form-check-label" for="perm_@permission.Id">
                                                                                <strong>@permission.Name</strong>
                                                                                <span class="d-block small text-muted mt-1">@permission.Description</span>
                                                                            </label>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>

                            <!-- Improved action buttons -->
                            <div class="d-flex flex-wrap gap-2 justify-content-end mt-4">
                                <a asp-page="./AdminDashboard" class="btn btn-outline-secondary px-4">
                                    <i class="fas fa-times me-1"></i> Cancel
                                </a>
                                <button type="submit" class="btn btn-primary px-4 save-btn">
                                    <i class="fas fa-save me-1"></i> Save Permissions
                                </button>
                                <a href="/Admin/GrantEssentialPermissions?userId=@Model.SelectedUserId" 
                                   class="btn btn-outline-info px-4" 
                                   title="Grant essential permissions needed for admin tasks">
                                    <i class="fas fa-shield-alt me-1"></i> Grant Essential Permissions
                                </a>
                            </div>
                        </form>
                    </div>
                </div>
            }
            else
            {
                <div class="card shadow-sm border-0">
                    <div class="card-body text-center p-5">
                        <div class="empty-state">
                            <i class="fas fa-user-shield text-muted mb-3" style="font-size: 3rem;"></i>
                            <h4 class="mb-3">Select a staff member</h4>
                            <p class="text-muted mb-0">
                                Choose a staff member from the list to manage their permissions.
                            </p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@functions {
    string GetRoleColor(string role)
    {
        return role?.ToLower() switch
        {
            "admin" => "danger",
            "doctor" => "success",
            "nurse" => "info",
            _ => "secondary"
        };
    }
    
    string GetCategoryIcon(string category)
    {
        return category switch
        {
            "Administration" => "fas fa-cogs",
            "User Management" => "fas fa-users-cog",
            "Patient Management" => "fas fa-user-injured",
            "Appointment Management" => "fas fa-calendar-check",
            "Medical Records" => "fas fa-file-medical",
            "System Administration" => "fas fa-server",
            "Prescription Management" => "fas fa-prescription",
            "Reporting" => "fas fa-chart-bar",
            "System" => "fas fa-server",
            _ => "fas fa-shield-alt"
        };
    }
}

@section Styles {
    <style>
        /* User permission manager styling */
        .permissions-manager .page-header {
            border-bottom: 1px solid #eee;
            padding-bottom: 1rem;
        }
        
        /* Staff list styling */
        .staff-item {
            transition: all 0.2s ease;
            border-left: 3px solid transparent;
        }
        
        .staff-item:hover {
            background-color: rgba(0, 123, 255, 0.05);
        }
        
        .staff-item.active {
            border-left: 3px solid #007bff;
        }
        
        .avatar-circle {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }
        
        /* Improved permission styling */
        .permission-check {
            transition: all 0.2s ease;
        }
        
        .permission-check:hover {
            background-color: rgba(0, 123, 255, 0.05);
        }
        
        .form-check-input:checked + .form-check-label {
            color: #007bff;
        }
        
        .form-check-input:checked + .form-check-label strong {
            font-weight: 600;
        }
        
        /* Enhanced buttons */
        .btn {
            border-radius: 5px;
            font-weight: 500;
        }
        
        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
            box-shadow: 0 2px 4px rgba(0, 123, 255, 0.2);
            transition: all 0.3s ease;
        }
        
        .btn-primary:hover {
            background-color: #0069d9;
            border-color: #0062cc;
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(0, 123, 255, 0.3);
        }
        
        .btn-outline-info {
            color: #17a2b8;
            border-color: #17a2b8;
            transition: all 0.3s ease;
        }
        
        .btn-outline-info:hover {
            background-color: #17a2b8;
            color: white;
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(23, 162, 184, 0.3);
        }
        
        /* Animation for save button */
        .save-btn.success {
            background-color: #28a745;
            border-color: #28a745;
        }
        
        /* Category badge */
        .category-count {
            font-size: 0.7rem;
            font-weight: normal;
        }
        
        /* Empty state */
        .empty-state {
            padding: 2rem 0;
        }
        
        /* Responsive adjustments */
        @@media (max-width: 768px) {
            .staff-item {
                padding: 0.75rem;
            }
            
            .avatar-circle {
                width: 32px;
                height: 32px;
                font-size: 0.8rem;
            }
        }
    </style>
}

@section Scripts {
    <script src="~/js/permissions-manager.js"></script>
    <script>
        $(document).ready(function() {
            // Staff search functionality
            $('#staffSearch').on('keyup', function() {
                var value = $(this).val().toLowerCase();
                $('.staff-item').filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
            
            // Highlight permission on check
            $('.permission-checkbox').change(function() {
                if ($(this).is(':checked')) {
                    $(this).closest('.permission-check').addClass('bg-light');
                } else {
                    $(this).closest('.permission-check').removeClass('bg-light');
                }
            });
            
            // Initialize checked items
            $('.permission-checkbox:checked').closest('.permission-check').addClass('bg-light');
            
            // Select all permissions
            $('#selectAllPermissions').click(function(e) {
                e.preventDefault();
                $('.permission-checkbox').prop('checked', true).change();
            });
            
            // Deselect all permissions
            $('#deselectAllPermissions').click(function(e) {
                e.preventDefault();
                $('.permission-checkbox').prop('checked', false).change();
            });
            
            // Save animation
            $('#permissionsForm').submit(function() {
                var saveBtn = $('.save-btn');
                var originalHtml = saveBtn.html();
                
                saveBtn.html('<i class="fas fa-circle-notch fa-spin me-1"></i> Saving...');
                saveBtn.prop('disabled', true);
                
                setTimeout(function() {
                    saveBtn.html(originalHtml);
                    saveBtn.prop('disabled', false);
                }, 2000);
                
                return true;
            });
            
            // Success animation for save button
            var hasSuccess = @((!string.IsNullOrEmpty(Model.StatusMessage) && !Model.IsError) ? "true" : "false");
            if (hasSuccess) {
                $('.save-btn').addClass('success');
                setTimeout(function() {
                    $('.save-btn').removeClass('success');
                }, 2000);
            }
            
            // Count checked permissions per category
            function updatePermissionCounts() {
                $('.accordion-item').each(function() {
                    var categoryId = $(this).find('.accordion-collapse').attr('id');
                    var checkedCount = $(this).find('.permission-checkbox:checked').length;
                    var totalCount = $(this).find('.permission-checkbox').length;
                    
                    var countBadge = $(this).find('.category-count');
                    countBadge.text(checkedCount + '/' + totalCount);
                    
                    if (checkedCount === 0) {
                        countBadge.removeClass('bg-primary bg-success').addClass('bg-secondary');
                    } else if (checkedCount === totalCount) {
                        countBadge.removeClass('bg-primary bg-secondary').addClass('bg-success');
                    } else {
                        countBadge.removeClass('bg-success bg-secondary').addClass('bg-primary');
                    }
                });
            }
            
            // Update counts initially and when permissions change
            updatePermissionCounts();
            $('.permission-checkbox').change(updatePermissionCounts);
        });
    </script>
} 