@page
@model Barangay.Pages.Admin.UserDetailsModel
@{
    ViewData["Title"] = "User Details";
}

<link rel="stylesheet" href="~/css/admin-dashboard-bhcare-new.css" />
<link rel="stylesheet" href="~/css/user-details-custom.css" />

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">User Details</h2>
        <a href="/Admin/UserManagement" class="btn btn-secondary">
            <i class="fa-solid fa-arrow-left"></i> Back to User Management
        </a>
    </div>

    @if (Model.ErrorMessage != null)
    {
        <div class="alert alert-danger">@Model.ErrorMessage</div>
    }
    else if (Model.UserDetails != null)
    {
        <div class="card shadow">
            <div class="user-header d-flex justify-content-between align-items-center">
                <h3 class="mb-0">@Model.UserDetails.FullName</h3>
                <span class="badge rounded-pill bg-@Model.GetStatusBadgeClass() status-badge">@Model.UserDetails.Status</span>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-8">
                        <div class="row mb-4">
                            <div class="col-md-6 section-container">
                                <h5 class="border-bottom pb-2 text-orange">Basic Information</h5>
                                <dl class="row">
                                    <dt class="col-sm-4 detail-label">ID</dt>
                                    <dd class="col-sm-8 detail-value">
                                        <span class="badge bg-secondary">
                                            @try
                                            {
                                                @Model.UserDetails.FormattedId
                                            }
                                            catch
                                            {
                                                @($"BHC-{Model.UserDetails.Id.Substring(0, 6)}")
                                            }
                                        </span>
                                        <small class="text-muted ms-2">System ID: @Model.UserDetails.Id.Substring(0, 8)...</small>
                                    </dd>
                                    
                                    <dt class="col-sm-4 detail-label">Name</dt>
                                    <dd class="col-sm-8 detail-value">@Model.UserDetails.FirstName @Model.UserDetails.MiddleName @Model.UserDetails.LastName</dd>
                                    
                                    <dt class="col-sm-4 detail-label">Email</dt>
                                    <dd class="col-sm-8 detail-value">@Model.UserDetails.Email</dd>
                                    
                                    <dt class="col-sm-4 detail-label">Contact</dt>
                                    <dd class="col-sm-8 detail-value">@Model.UserDetails.PhoneNumber</dd>

                                    <dt class="col-sm-4 detail-label">Birth Date</dt>
                                    <dd class="col-sm-8 detail-value">
                                        @if (Model.GetBirthDateAsString() != "")
                                        {
                                            @Model.GetBirthDateAsString()
                                        }
                                        else
                                        {
                                            <span>Not specified</span>
                                        }
                                    </dd>
                                    
                                    <dt class="col-sm-4 detail-label">Age</dt>
                                    <dd class="col-sm-8 detail-value">@Model.CalculateAge() years old</dd>
                                    
                                    <dt class="col-sm-4 detail-label">Barangay</dt>
                                    <dd class="col-sm-8 detail-value">
                                        @(string.IsNullOrEmpty(Model.UserDetails.Barangay) ? "Not specified" : Model.UserDetails.Barangay)
                                    </dd>
                                    
                                    <dt class="col-sm-4 detail-label">Address</dt>
                                    <dd class="col-sm-8 detail-value">
                                        @(string.IsNullOrEmpty(Model.UserDetails.Address) ? "Not specified" : Model.UserDetails.Address)
                                    </dd>
                                </dl>
                            </div>
                            <div class="col-md-6 section-container">
                                <h5 class="border-bottom pb-2 text-orange">Account Information</h5>
                                <dl class="row">
                                    <dt class="col-sm-4 detail-label">Status</dt>
                                    <dd class="col-sm-8 detail-value">
                                        <span class="badge bg-@Model.GetStatusBadgeClass()">@Model.UserDetails.Status</span>
                                    </dd>
                                    
                                    <dt class="col-sm-4 detail-label">Registration</dt>
                                    <dd class="col-sm-8 detail-value">@Model.UserDetails.CreatedAt.ToString("MM/dd/yyyy")</dd>
                                    
                                    <dt class="col-sm-4 detail-label">Last Active</dt>
                                    <dd class="col-sm-8 detail-value">
                                        @if (Model.GetLastActiveAsString() != "")
                                        {
                                            @Model.GetLastActiveAsString()
                                        }
                                        else
                                        {
                                            <span>Never</span>
                                        }
                                    </dd>
                                    
                                    <dt class="col-sm-4 detail-label">User Type</dt>
                                    <dd class="col-sm-8 detail-value">
                                        @Model.GetUserTypeDisplay()
                                    </dd>
                                    
                                    @if (Model.UserRoles.Any())
                                    {
                                        <dt class="col-sm-4 detail-label">Roles</dt>
                                        <dd class="col-sm-8 detail-value">
                                            @foreach (var role in Model.UserRoles)
                                            {
                                                <span class="badge bg-orange me-1">@role</span>
                                            }
                                        </dd>
                                    }
                                </dl>
                            </div>
                        </div>

                        @if (Model.IsMinor)
                        {
                            <div class="row mt-3">
                                <div class="col-12">
                                    <div class="card border-orange">
                                    <div class="card-header bg-orange text-white">
                                        <h5 class="mb-0"><i class="fa-solid fa-user-shield me-2"></i>Guardian Information</h5>
                                    </div>
                                        <div class="card-body">
                                            @if (Model.Guardian != null)
                                            {
                                                <dl class="row mb-0">
                                                    <dt class="col-sm-3">Guardian Name</dt>
                                                    <dd class="col-sm-9">@Model.Guardian.GuardianFirstName @Model.Guardian.GuardianLastName</dd>
                                                    
                                                    <dt class="col-sm-3">Consent Status</dt>
                                                    <dd class="col-sm-9">
                                                        @{
                                                            var consentStatus = Model.Guardian.ConsentStatus ?? "Pending";
                                                            var statusClass = consentStatus.ToLower() == "approved" ? "success" : 
                                                                             consentStatus.ToLower() == "rejected" ? "danger" : "warning";
                                                        }
                                                        <span class="badge bg-@statusClass">@consentStatus</span>
                                                    </dd>
                                                    
                                                    @if (!string.IsNullOrEmpty(Model.Guardian.ResidencyProofPath))
                                                    {
                                                        <dt class="col-sm-3">Residency Proof</dt>
                                                        <dd class="col-sm-9">
                                                            <a href="@Model.Guardian.ResidencyProofPath" target="_blank" class="btn btn-sm btn-outline-primary">
                                                                <i class="fa-solid fa-file-lines me-1"></i> View Document
                                                            </a>
                                                        </dd>
                                                    }
                                                    
                                                    <dt class="col-sm-3">Created At</dt>
                                                    <dd class="col-sm-9">@(Model.Guardian.CreatedAt.ToString("MM/dd/yyyy hh:mm tt"))</dd>
                                                </dl>
                                            }
                                            else
                                            {
                                                <div class="alert alert-warning">
                                                    <i class="fa-solid fa-triangle-exclamation me-2"></i>
                                                    <strong>Guardian information is required but missing.</strong>
                                                    <p class="mb-0 mt-2">This user is under 18 years old and requires guardian consent, but no guardian information has been provided.</p>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="col-md-4 section-container">
                        <h5 class="border-bottom pb-2 text-orange">Identity Documents</h5>
                        @if (Model.UserDocuments.Any())
                        {
                            @foreach (var doc in Model.UserDocuments)
                            {
                                <div class="card mb-3 shadow-sm">
                                    <div class="card-body p-3">
                                        <h6 class="card-title">@doc.FileName</h6>
                                        <p class="card-text small text-muted">
                                            Uploaded on @doc.UploadDate.ToString("MM/dd/yyyy")
                                            <br>
                                            Status: <span class="badge bg-@(doc.Status == "Verified" ? "success" : doc.Status == "Pending" ? "warning" : "secondary")">@doc.Status</span>
                                        </p>
                                        <div>
                                            @if (doc.ContentType != null && doc.ContentType.StartsWith("image/"))
                                            {
                                                <img src="@doc.FilePath" class="document-preview img-fluid mb-2 rounded border" alt="User ID" />
                                            }
                                            <div class="d-grid gap-2">
                                                <button type="button"
                                                        class="btn btn-sm btn-orange"
                                                        onclick="showDocumentPreview('@doc.FilePath','@doc.FileName','@doc.ContentType')">
                                                    <i class="fa-solid fa-eye"></i> View Document
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="alert alert-warning">
                                <p>No documents uploaded</p>
                                <div class="text-center">
                                    <i class="fa-solid fa-file-image fa-3x text-muted mb-2"></i>
                                    <p class="small text-muted">User has not uploaded any identity documents yet.</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <div class="d-flex justify-content-between">
                    <a href="/Admin/UserManagement" class="btn btn-secondary">
                        <i class="fa-solid fa-arrow-left"></i> Back
                    </a>
                    <div>
                        @if (Model.UserDetails.Status == "Pending")
                        {
                            <button type="button" class="btn btn-success me-2" onclick="approveUser('@Model.UserDetails.Id')">
                                <i class="fa-solid fa-check"></i> Approve
                            </button>
                            <button type="button" class="btn btn-danger" onclick="rejectUser('@Model.UserDetails.Id')">
                                <i class="fa-solid fa-xmark"></i> Reject
                            </button>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Document Preview Modal (Admin/UserDetails) -->
<div class="modal fade" id="udDocumentPreviewModal" tabindex="-1" aria-labelledby="udDocumentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-orange text-white">
                <h5 class="modal-title" id="udDocumentModalLabel">Document Preview</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0">
                <div id="udDocumentPreviewContainer" class="text-center overflow-auto p-3" style="max-height: 500px;"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <a id="udDownloadDocBtn" href="#" class="btn btn-orange" download>
                    <i class="fa-solid fa-download"></i> Download
                </a>
                <a id="udViewDocBtn" href="#" class="btn btn-primary" target="_blank">
                    <i class="fa-solid fa-up-right-from-square"></i> Open in Browser
                </a>
            </div>
        </div>
    </div>
    </div>

<form id="antiForgeryForm">
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    <script>
        // Preview document in orange-themed modal (matches User Management)
        function showDocumentPreview(filePath, fileName, contentType) {
            const modalEl = document.getElementById('udDocumentPreviewModal');
            const bsModal = new bootstrap.Modal(modalEl);
            const titleEl = document.getElementById('udDocumentModalLabel');
            const container = document.getElementById('udDocumentPreviewContainer');
            const downloadBtn = document.getElementById('udDownloadDocBtn');
            const viewBtn = document.getElementById('udViewDocBtn');

            titleEl.textContent = fileName || 'Document Preview';
            container.innerHTML = '';

            downloadBtn.setAttribute('href', filePath);
            downloadBtn.setAttribute('download', fileName);
            viewBtn.setAttribute('href', filePath);

            if (contentType && contentType.startsWith('image/')) {
                const img = document.createElement('img');
                img.src = filePath;
                img.alt = fileName;
                img.classList.add('img-fluid','rounded','shadow-sm');
                img.style.maxHeight = '450px';
                container.appendChild(img);
            } else if (contentType && contentType.includes('pdf')) {
                const embed = document.createElement('embed');
                embed.src = filePath;
                embed.type = 'application/pdf';
                embed.style.width = '100%';
                embed.style.height = '450px';
                embed.classList.add('rounded','shadow-sm');
                container.appendChild(embed);
            } else {
                const fallback = document.createElement('div');
                fallback.classList.add('p-4','bg-light','rounded','shadow-sm');
                fallback.innerHTML = '<div class="text-center my-4">\
                    <i class="fa-solid fa-file fa-3x mb-3 text-orange"></i>\
                    <p class="h5 mb-3">Preview not available for this file type</p>\
                    <p>Please download or open in browser to view</p>\
                    <p class="text-muted mt-3">File: ' + (fileName || '') + '</p>\
                    </div>';
                container.appendChild(fallback);
            }

            bsModal.show();
        }

        function approveUser(userId) {
            if (confirm('Are you sure you want to approve this user?')) {
                // Get the anti-forgery token
                const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                
                fetch('/Admin/UserDetails?handler=Approve', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'RequestVerificationToken': token
                    },
                    body: `id=${userId}`
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                        window.location.href = '/Admin/UserManagement';
                    } else {
                        alert(data.message || 'An error occurred');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to approve user. Please try again.');
                });
            }
        }

        function rejectUser(userId) {
            if (confirm('Are you sure you want to reject this user?')) {
                // Get the anti-forgery token
                const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                
                fetch('/Admin/UserDetails?handler=Reject', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'RequestVerificationToken': token
                    },
                    body: `id=${userId}`
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                        window.location.href = '/Admin/UserManagement';
                    } else {
                        alert(data.message || 'An error occurred');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to reject user. Please try again.');
                });
            }
        }
    </script>
} 