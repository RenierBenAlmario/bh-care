@page
@model Barangay.Pages.Nurse.NurseDashboardModel
@{
    ViewData["Title"] = "Nurse Dashboard";
    Layout = "_NurseLayout";
}

<style>
    .card.bg-primary .fas,
    .card.bg-primary .fas::before {
        color: white !important;
        opacity: 1 !important;
    }

    .card {
        transition: transform 0.2s, box-shadow 0.2s;
        border: none;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }

    .card:hover {
        transform: translateY(-2px);
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    }

    .list-group-item {
        transition: background-color 0.2s;
    }

    .list-group-item:hover {
        background-color: rgba(0, 0, 0, 0.02);
    }

    .refresh-indicator {
        font-size: 0.9rem;
        color: #1976D2;
    }

    .refresh-indicator i {
        margin-right: 0.5rem;
    }

    @@media (max-width: 768px) {
        .btn-toolbar {
            margin-top: 1rem;
            width: 100%;
        }

        .btn-toolbar .btn {
            width: 100%;
            margin-bottom: 0.5rem;
        }
    }
</style>

<!-- Page Header -->
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3">
    <h1 class="h2">@ViewData["Title"]</h1>

</div>

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger py-2 px-3 mb-2" role="alert">
        <i class="fas fa-exclamation-circle me-1"></i>
        @Model.ErrorMessage
        <button type="button" class="btn-close small" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Statistics Cards -->
<div class="row g-3 mb-4">
    <div class="col-sm-6 col-xl-3">
        <div class="card bg-primary text-white h-100">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-shrink-0">
                        <i class="fas fa-users h1 mb-0"></i>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h6 class="card-title mb-0">Today's Patients</h6>
                        <h2 class="display-6 mb-0" id="totalPatientsCount">@Model.TodaysTotalPatients</h2>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-6 col-xl-3">
        <div class="card bg-primary text-white h-100">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-shrink-0">
                        <i class="fas fa-procedures h1 mb-0"></i>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h6 class="card-title mb-0">In Progress</h6>
                        <h2 class="display-6 mb-0" id="inProgressCount">@Model.InProgressCount</h2>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-6 col-xl-3">
        <div class="card bg-primary text-white h-100">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-shrink-0">
                        <i class="fas fa-clock h1 mb-0"></i>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h6 class="card-title mb-0">Waiting</h6>
                        <h2 class="display-6 mb-0" id="waitingCount">@Model.WaitingCount</h2>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-6 col-xl-3">
        <div class="card bg-primary text-white h-100">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-shrink-0">
                        <i class="fas fa-check-circle h1 mb-0"></i>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h6 class="card-title mb-0">Completed Today</h6>
                        <h2 class="display-6 mb-0" id="completedCount">@Model.CompletedTodayCount</h2>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Patient Queue Section -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white">
                <h5 class="card-title mb-0">
                    <i class="fas fa-users me-2"></i>
                    Patient Queue
                </h5>
            </div>
            <div class="card-body">
                @if (Model.Queue.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Patient Name</th>
                                    <th>Status</th>
                                    <th>Waiting Time</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var patient in Model.Queue)
                                {
                                    <tr>
                                        <td>@patient.Id</td>
                                        <td>@patient.Name</td>
                                        <td>
                                            <span class="badge bg-@(patient.Status == "Waiting" ? "warning" : 
                                                                patient.Status == "In Progress" ? "success" : "info")">
                                                @patient.Status
                                            </span>
                                        </td>
                                        <td>@patient.WaitingTime</td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <button class="btn btn-primary view-patient" data-id="@patient.Id">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                                <button class="btn btn-success start-treatment" data-id="@patient.Id">
                                                    <i class="fas fa-play"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="fas fa-users fa-3x text-muted mb-3"></i>
                        <h6 class="text-muted">No patients in queue</h6>
                        <p class="text-muted mb-0">Patients will appear here when they arrive for their appointments.</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Nurse Dashboard initialized');
            
            // Refresh data periodically
            let autoRefresh = true;
            const refreshInterval = 30000; // 30 seconds
            
            function updateDashboard() {
                console.log('Dashboard data is already loaded from server-side rendering');
                // Data is already available from server-side rendering, no need for API calls
                // The dashboard displays current data from the page model
            }
            
            // Set up auto-refresh
            let refreshTimer = setInterval(() => {
                if (autoRefresh) {
                    updateDashboard();
                }
            }, refreshInterval);
            
            // Manual refresh button
            document.getElementById('refreshData')?.addEventListener('click', function() {
                console.log('Manual refresh triggered');
                updateDashboard();
            });
            
            // Patient queue actions
            document.querySelectorAll('.view-patient').forEach(button => {
                button.addEventListener('click', function() {
                    const patientId = this.getAttribute('data-id');
                    console.log('View patient:', patientId);
                    // Navigate to patient details or open modal
                });
            });
            
            document.querySelectorAll('.start-treatment').forEach(button => {
                button.addEventListener('click', function() {
                    const patientId = this.getAttribute('data-id');
                    console.log('Start treatment for patient:', patientId);
                    // Navigate to treatment page or start process
                });
            });
        });
    </script>
}