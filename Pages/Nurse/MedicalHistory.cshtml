@page
@using Barangay.Models
@using Barangay.Extensions
@model Barangay.Pages.Nurse.MedicalHistoryModel
@{
    ViewData["Title"] = "Patient Medical History";
    Layout = "_Layout";
}

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script>
        $(document).ready(function() {
            // Handle form submission
            $('form[data-handler="UpdateMedicalHistory"]').on('submit', function(e) {
                e.preventDefault();
                
                var form = $(this);
                var submitButton = form.find('button[type="submit"]');
                submitButton.prop('disabled', true);

                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: form.serialize(),
                    success: function(response) {
                        if (response.success) {
                            showAlert('success', 'Medical information updated successfully');
                            setTimeout(function() {
                                location.reload();
                            }, 1500);
                        } else {
                            showAlert('danger', response.message || 'Failed to update medical information');
                            submitButton.prop('disabled', false);
                        }
                    },
                    error: function() {
                        showAlert('danger', 'An error occurred while updating medical information');
                        submitButton.prop('disabled', false);
                    }
                });
            });

            function showAlert(type, message) {
                var alertDiv = $('<div>')
                    .addClass('alert alert-' + type + ' alert-dismissible fade show')
                    .attr('role', 'alert')
                    .html(message + 
                        '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>');
                
                $('#alertContainer').empty().append(alertDiv);
                
                // Auto dismiss after 5 seconds
                setTimeout(function() {
                    alertDiv.alert('close');
                }, 5000);
            }
        });
    </script>
}

<div class="container-fluid mt-4">
    <h2>Patient Medical History</h2>
    <p>View and manage patient medical records.</p>

    <!-- Alert Container -->
    <div id="alertContainer"></div>

    <div class="row">
        <div class="col-md-4">
            <div class="card mb-4">
                <div class="card-header">
                    <h5>Patient Search</h5>
                </div>
                <div class="card-body">
                    <form method="post" asp-page-handler="Search">
                        <div class="input-group mb-3">
                            <input type="text" class="form-control" name="searchTerm" placeholder="Search by name or ID...">
                            <button class="btn btn-primary" type="submit">Search</button>
                        </div>
                    </form>

                    <div class="list-group mt-3">
                        @foreach (var patient in Model.Patients)
                        {
                            <a href="/Nurse/MedicalHistory?patientId=@patient.PatientId" 
                               class="list-group-item list-group-item-action d-flex justify-content-between align-items-center @(Model.SelectedPatient?.PatientId == patient.PatientId ? "active" : "")">
                                <div>
                                    <div>@patient.PatientName</div>
                                    <small>
                                        @(patient.AgeValue != 0 ? $"{patient.AgeValue} years old" : "Age not specified")
                                    </small>
                                    <div>
                                        <small>@(string.IsNullOrEmpty(patient.Gender) ? "Gender not specified" : patient.Gender) | @(string.IsNullOrEmpty(patient.ContactNumber) ? "No contact" : patient.ContactNumber)</small>
                                    </div>
                                </div>
                                <span class="badge bg-success rounded-pill">Active</span>
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-8">
            @if (Model.HasSelectedPatient && Model.SelectedPatient != null)
            {
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5>Patient Information</h5>
                        <span class="badge bg-success">Active</span>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <h6>Personal Information</h6>
                                <table class="table table-borderless">
                                    <tr>
                                        <th>Full Name</th>
                                        <td>@Model.SelectedPatient.PatientName</td>
                                    </tr>
                                    <tr>
                                        <th>Gender</th>
                                        <td>@(string.IsNullOrEmpty(Model.SelectedPatient.Gender) ? "Not specified" : Model.SelectedPatient.Gender)</td>
                                    </tr>
                                    <tr>
                                        <th>Date of Birth</th>
                                        <td>@(Model.SelectedPatient.DateOfBirth?.ToDateString() ?? "Not specified")</td>
                                    </tr>
                                    <tr>
                                        <th>Address</th>
                                        <td>@(string.IsNullOrEmpty(Model.SelectedPatient.Address) ? "Not specified" : Model.SelectedPatient.Address)</td>
                                    </tr>
                                </table>
                            </div>
                            <div class="col-md-6">
                                <h6>Contact Information</h6>
                                <table class="table table-borderless">
                                    <tr>
                                        <th>Contact Number</th>
                                        <td>@(string.IsNullOrEmpty(Model.SelectedPatient.ContactNumber) ? "Not specified" : Model.SelectedPatient.ContactNumber)</td>
                                    </tr>
                                    <tr>
                                        <th>Emergency Contact</th>
                                        <td>@(string.IsNullOrEmpty(Model.SelectedPatient.EmergencyContact) ? "Not specified" : Model.SelectedPatient.EmergencyContact)</td>
                                    </tr>
                                    <tr>
                                        <th>Emergency Number</th>
                                        <td>@(string.IsNullOrEmpty(Model.SelectedPatient.EmergencyContactNumber) ? "Not specified" : Model.SelectedPatient.EmergencyContactNumber)</td>
                                    </tr>
                                </table>
                            </div>
                        </div>

                        <div class="row mt-4">
                            <div class="col-md-12">
                                <h6>Medical Information</h6>
                                <form method="post" asp-page-handler="UpdateMedicalHistory" data-handler="UpdateMedicalHistory">
                                    <input type="hidden" name="patientId" value="@Model.SelectedPatient.PatientId" />
                                    @Html.AntiForgeryToken()
                                    <div class="mb-3">
                                        <label class="form-label">Allergies</label>
                                        <textarea class="form-control" name="allergies" rows="2">@Model.SelectedPatient.Allergies</textarea>
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Current Medications</label>
                                        <textarea class="form-control" name="currentMedications" rows="2">@Model.SelectedPatient.CurrentMedications</textarea>
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Medical History</label>
                                        <textarea class="form-control" name="medicalHistory" rows="3">@Model.SelectedPatient.MedicalHistory</textarea>
                                    </div>
                                    <button type="submit" class="btn btn-primary">Update Medical Information</button>
                                </form>
                            </div>
                        </div>

                        <div class="row mt-4">
                            <div class="col-md-12">
                                <h6>Appointment History</h6>
                                @if (Model.PatientAppointments.Any())
                                {
                                    <div class="table-responsive">
                                        <table class="table table-striped">
                                            <thead>
                                                <tr>
                                                    <th>Date</th>
                                                    <th>Time</th>
                                                    <th>Doctor</th>
                                                    <th>Reason</th>
                                                    <th>Status</th>
                                                    <th>Notes</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var appointment in Model.PatientAppointments)
                                                {
                                                    <tr>
                                                        <td>@appointment.AppointmentDate.ToDateString()</td>
                                                        <td>@(SafeFormatTime(appointment.AppointmentTime))</td>
                                                        <td>@(string.IsNullOrEmpty(appointment.DoctorId) ? "Not assigned" : appointment.DoctorId)</td>
                                                        <td>@(string.IsNullOrEmpty(appointment.ReasonForVisit) ? "Not specified" : appointment.ReasonForVisit)</td>
                                                        <td>
                                                            <span class="badge bg-@(GetStatusBadgeClass(appointment.Status))">
                                                                @appointment.Status
                                                            </span>
                                                        </td>
                                                        <td>@(string.IsNullOrEmpty(appointment.Description) ? "Not available" : appointment.Description)</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-info">
                                        No appointment history found for this patient.
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="row mt-4">
                            <div class="col-md-12">
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <h6>Vital Signs History</h6>
                                    <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#addVitalSignsModal">
                                        Record New Vital Signs
                                    </button>
                                </div>
                                
                                @if (Model.PatientVitalSigns.Any())
                                {
                                    <div class="table-responsive">
                                        <table class="table table-striped">
                                            <thead>
                                                <tr>
                                                    <th>Date</th>
                                                    <th>Temperature</th>
                                                    <th>Blood Pressure</th>
                                                    <th>Heart Rate</th>
                                                    <th>Respiratory Rate</th>
                                                    <th>SpO2</th>
                                                    <th>Weight</th>
                                                    <th>Height</th>
                                                    <th>Notes</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var vitalSign in Model.PatientVitalSigns)
                                                {
                                                    <tr>
                                                        <td>@vitalSign.RecordedAt.ToString("MMM dd, yyyy HH:mm")</td>
                                                        <td>@(vitalSign.Temperature.HasValue ? $"{vitalSign.Temperature:F1}°C" : "-")</td>
                                                        <td>@(string.IsNullOrEmpty(vitalSign.BloodPressure) ? "-" : vitalSign.BloodPressure)</td>
                                                        <td>@(vitalSign.HeartRate.HasValue ? $"{vitalSign.HeartRate} bpm" : "-")</td>
                                                        <td>@(vitalSign.RespiratoryRate.HasValue ? $"{vitalSign.RespiratoryRate}/min" : "-")</td>
                                                        <td>@(vitalSign.SpO2.HasValue ? $"{vitalSign.SpO2}%" : "-")</td>
                                                        <td>@(vitalSign.Weight.HasValue ? $"{vitalSign.Weight:F1} kg" : "-")</td>
                                                        <td>@(vitalSign.Height.HasValue ? $"{vitalSign.Height:F1} cm" : "-")</td>
                                                        <td>@(string.IsNullOrEmpty(vitalSign.Notes) ? "-" : vitalSign.Notes)</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-info">
                                        No vital signs recorded for this patient.
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="card">
                    <div class="card-body text-center p-5">
                        <h5 class="text-muted">Select a patient to view their information</h5>
                        <p>Choose a patient from the list on the left to view and manage their medical history.</p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal for Adding Vital Signs -->
<div class="modal fade" id="addVitalSignsModal" tabindex="-1" aria-labelledby="addVitalSignsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addVitalSignsModalLabel">Record Vital Signs</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="AddVitalSigns">
                    <input type="hidden" name="patientId" value="@(Model.SelectedPatient?.PatientId ?? "")" />
                    <input type="hidden" asp-for="InputVitalSign.PatientId" value="@(Model.SelectedPatient?.PatientId ?? "")" />
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Temperature (°C)</label>
                                <input type="number" step="0.1" class="form-control" asp-for="InputVitalSign.Temperature" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Blood Pressure (mmHg)</label>
                                <input type="text" class="form-control" asp-for="InputVitalSign.BloodPressure" placeholder="e.g. 120/80">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Heart Rate (bpm)</label>
                                <input type="number" class="form-control" asp-for="InputVitalSign.HeartRate">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Respiratory Rate (/min)</label>
                                <input type="number" class="form-control" asp-for="InputVitalSign.RespiratoryRate">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">SpO2 (%)</label>
                                <input type="number" step="0.1" class="form-control" asp-for="InputVitalSign.SpO2">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Weight (kg)</label>
                                <input type="number" step="0.1" class="form-control" asp-for="InputVitalSign.Weight">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Height (cm)</label>
                                <input type="number" step="0.1" class="form-control" asp-for="InputVitalSign.Height">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Notes</label>
                                <textarea class="form-control" asp-for="InputVitalSign.Notes" rows="2"></textarea>
                            </div>
                        </div>
                    </div>
                    
                    <div class="text-end mt-3">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save Vital Signs</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(AppointmentStatus status)
    {
        return status switch
        {
            AppointmentStatus.Pending => "bg-warning",
            AppointmentStatus.Confirmed => "bg-success",
            AppointmentStatus.Cancelled => "bg-danger",
            AppointmentStatus.Completed => "bg-info",
            _ => "bg-secondary"
        };
    }
    
    private string SafeFormatTime(TimeSpan time)
    {
        try
        {
            return time.ToString(@"hh\:mm");
        }
        catch (FormatException)
        {
            return "00:00";
        }
        catch (Exception)
        {
            return "Invalid time";
        }
    }
}